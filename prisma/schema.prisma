generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @default(autoincrement()) @id
  email String @unique
  password String
  products Product[]
  carts CartItem[]
  addresses Address[]
  orders Order[]
}

model Product {
  id Int @default(autoincrement()) @id
  name String
  price Float
  quantity Int @default(0)
  description String
  userId Int
  user User @relation(fields: [userId], references: [id])
  images ProductImage[]
  colors ProductColor[]
}

model ProductImage {
  id Int @default(autoincrement()) @id
  fileName String
  productId Int
  product Product @relation(fields: [productId], references: [id])
}

model Color {
  id Int @default(autoincrement()) @id
  name String
  productColor ProductColor[]
}

model Size {
  id Int @default(autoincrement()) @id
  name String
  productSize ProductSize[]
}

model ProductColor{
  id Int @default(autoincrement()) @id
  productId Int
  colorId Int
  product Product @relation(fields: [productId], references: [id])
  color Color @relation(fields: [colorId], references: [id])
  size ProductSize[]
}

model ProductSize {
  id Int @default(autoincrement()) @id
  stock Int
  price Float
  productColorId Int
  sizeId Int
  color ProductColor @relation(fields: [productColorId], references: [id])
  size Size @relation(fields: [sizeId], references: [id])
  cartItems CartItem[]
  orderItems OrderItem[]
}

model CartItem {
  id        Int      @id @default(autoincrement())
  productSizeId Int
  userId Int
  quantity  Int
  price     Float
  product   ProductSize  @relation(fields: [productSizeId], references: [id])
  user User @relation(fields: [userId], references: [id])
}

model Address {
  id        Int    @id @default(autoincrement())
  user      User   @relation(fields: [userId], references: [id])
  userId    Int
  name String
  phoneNumber String
  address    String
  city      Int
  district Int
  ward Int
  orders    Order[]
}

model Order {
  id          Int         @id @default(autoincrement())
  user        User        @relation(fields: [userId], references: [id])
  userId      Int
  address     Address     @relation(fields: [addressId], references: [id])
  addressId   Int
  shippingFee Float @default(1)
  total       Float
  paymentMethodId Int
  paymentMethod PaymentMethod @relation(fields: [paymentMethodId], references: [id])
  status      String      @default("pending")
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  orderItems  OrderItem[]
}

model OrderItem {
  id           Int         @id @default(autoincrement())
  order        Order       @relation(fields: [orderId], references: [id])
  orderId      Int
  productSize  ProductSize @relation(fields: [productSizeId], references: [id])
  productSizeId Int
  quantity     Int
  price        Float
}

model PaymentMethod {
  id Int @default(autoincrement()) @id
  name String
  orders Order[]
}